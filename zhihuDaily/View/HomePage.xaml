<Page
    x:Class="zhihuDaily.HomePage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:zhihuDaily"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d" 
    DataContext="{Binding HomePage, Source={StaticResource Locator}}"
    xmlns:Converter="using:zhihuDaily.Converters" NavigationCacheMode="Required"
    xmlns:pr="using:PullToRefresh.UWP" Loaded="Page_Loaded">

    <Page.Resources>

        <Style x:Key="ItemContainerStyle" TargetType="ListBoxItem">

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Grid Background="{TemplateBinding Background}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates" >
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="PointerOver"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates" >
                                    <VisualState x:Name="Unselected" />
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="fillColor" Storyboard.TargetProperty="(Rectangle.Fill).(SolidColorBrush.Color)" BeginTime="00:00:00" Duration="0" To="#FFFFFF" /><!--58CC0C mark-->
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="SelectedUnfocused">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="fillColor" Storyboard.TargetProperty="(Rectangle.Fill).(SolidColorBrush.Color)" BeginTime="00:00:00" Duration="0"  To="#FFFFFF" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="SelectedPressed">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="fillColor" Storyboard.TargetProperty="(Rectangle.Fill).(SolidColorBrush.Color)" BeginTime="00:00:00" Duration="0"  To="#FFFFFF" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="SelectedPointerOver">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="fillColor" Storyboard.TargetProperty="(Rectangle.Fill).(SolidColorBrush.Color)" BeginTime="00:00:00" Duration="0"  To="#FFFFFF" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Ellipse x:Name="fillColor"  IsHitTestVisible="False" Width="8" Height="8" Fill="#FFBFBFBF" Margin="4,0"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ListBoxStyle" TargetType="ListBox">
            <Setter Property="Foreground" Value="{StaticResource ListBoxForegroundThemeBrush}"/>
            <Setter Property="Background" Value="{StaticResource ListBoxBackgroundThemeBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ListBoxBorderThemeBrush}"/>
            <Setter Property="BorderThickness" Value="{StaticResource ListBoxBorderThemeThickness}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled"/>
            <Setter Property="ScrollViewer.IsHorizontalRailEnabled" Value="True"/>
            <Setter Property="ScrollViewer.VerticalScrollMode" Value="Enabled"/>
            <Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="True"/>
            <Setter Property="ScrollViewer.ZoomMode" Value="Disabled"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="TabNavigation" Value="Once"/>
            <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBox">
                        <Border x:Name="LayoutRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused"/>
                                    <VisualState x:Name="Unfocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ScrollViewer x:Name="ScrollViewer" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" Padding="{TemplateBinding Padding}" TabNavigation="{TemplateBinding TabNavigation}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}">
                                <ItemsPresenter/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="ListViewItem" >
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <ListViewItemPresenter 
                            CheckHintBrush="{ThemeResource ListViewItemCheckHintThemeBrush}" 
                            CheckBrush="{ThemeResource ListViewItemCheckThemeBrush}" 
                            ContentMargin="4" 
                            ContentTransitions="{TemplateBinding ContentTransitions}" 
                            CheckSelectingBrush="{ThemeResource ListViewItemCheckSelectingThemeBrush}"
                            DragForeground="{ThemeResource ListViewItemDragForegroundThemeBrush}"
                            DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}"
                            DragBackground="{ThemeResource ListViewItemDragBackgroundThemeBrush}" 
                            DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"
                            FocusBorderBrush="{ThemeResource ListViewItemFocusBorderThemeBrush}" 
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            Padding="{TemplateBinding Padding}" PointerOverBackgroundMargin="1"
                            PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}"
                            PointerOverBackground="{ThemeResource ListViewItemPointerOverBackgroundThemeBrush}"
                            ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" 
                            SelectedPointerOverBorderBrush="{ThemeResource ListViewItemSelectedPointerOverBorderThemeBrush}"
                            SelectionCheckMarkVisualEnabled="True"
                            SelectedForeground="{ThemeResource ListViewItemSelectedForegroundThemeBrush}"
                            SelectedPointerOverBackground="{ThemeResource ListViewItemSelectedPointerOverBackgroundThemeBrush}" 
                            SelectedBorderThickness="{ThemeResource ListViewItemCompactSelectedBorderThemeThickness}" 
                            SelectedBackground="Transparent"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Converter:NullableBooleanToBoolean x:Key="NullableBooleanToBooleanKey" />
        <Converter:BoolVisibilityConverter x:Key="BoolVisibilityConverter"/>
        <Converter:LightModeConverter x:Key="LightModeConverter"/>
        <Converter:DateStyleConverter x:Key="DateStyleConverter"/>
        <Converter:CacheImageValueConverter x:Key="ImageCache"/>
        <Converter:MultipicVisibility x:Key="MultipicVisibility"/>
    </Page.Resources>
    <Grid >
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition />
        </Grid.RowDefinitions>
 
        <local:PageHeader>
            <local:PageHeader.HeaderContent >
                <Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Foreground="White" x:Name="title" Style="{ThemeResource PageTitleTextBlockStyle}" VerticalAlignment="Center" Margin="48,0,0,0" Text="{Binding PageTitle}"/>
                    <Button Foreground="White" Background="Transparent" Grid.Column="1" HorizontalAlignment="Right"  x:Name="contextButton" FontWeight="Bold"   Content="· · ·" Width="48" Height="48">
                        <Button.Flyout>
                            <MenuFlyout>
                                <MenuFlyoutItem Name="btn_LightModeSwitch" Text="{Binding Converter={StaticResource LightModeConverter}, Path=CurrentTheme}" Click="MenuFlyoutItem_Click" ></MenuFlyoutItem>
                                <MenuFlyoutItem Text="设置选项" Click="MenuFlyoutItem_Click_1"></MenuFlyoutItem>
                            </MenuFlyout>
                        </Button.Flyout>
                    </Button>
                </Grid>
            </local:PageHeader.HeaderContent>
        </local:PageHeader>

        <Grid Name="grid_Content" Grid.Row="1" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" >
            <pr:PullToRefreshBox >
                <ListView  x:Name="newsList"  ItemsSource="{Binding NewsDS}" ItemClick="newsList_ItemClick"  IsItemClickEnabled="True" Foreground="{ThemeResource ApplicationForegroundThemeBrush}"><!--local:ItemClickCommand.Command="{Binding ItemClickCommand}"-->
                    <ListView.Header>
                        <Grid Height="200" Margin="0 0 0 20" Background="LightGray">
                            <FlipView x:Name="flipView" UseTouchAnimationsForAllNavigation="True" Loaded="flipView_Loaded" Grid.Row="0" ItemsSource="{Binding LatestNews.TopStories}" Tapped="flipView_Tapped"   SelectionChanged="flipView_SelectionChanged">
                                <FlipView.ItemTemplate>
                                    <DataTemplate>
                                        <RelativePanel >
                                            <Image RelativePanel.AlignBottomWithPanel="True" RelativePanel.AlignTopWithPanel="True"
                                                   RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True" 
                                                   DataContext="{Binding Image,Converter={StaticResource ImageCache}}" Source="{Binding Result}" Stretch="UniformToFill"/>
                                            <Border RelativePanel.AlignBottomWithPanel="True" RelativePanel.AlignTopWithPanel="True" 
                                                    RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True">
                                                <Border.Background>
                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0.2">
                                                        <GradientStop Color="Transparent"/>
                                                        <GradientStop Offset="1" Color="#4C000000"/>
                                                    </LinearGradientBrush>
                                                </Border.Background>
                                            </Border>
                                            <TextBlock Text="{Binding Title}" FontSize="18" TextWrapping="Wrap" Foreground="White" Margin="30,0,30,30"  RelativePanel.AlignBottomWithPanel="True" />
                                        </RelativePanel>
                                    </DataTemplate>
                                </FlipView.ItemTemplate>
                                <FlipView.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel Orientation="Horizontal"/>
                                    </ItemsPanelTemplate>
                                </FlipView.ItemsPanel>

                                <!--<interactivity:Interaction.Behaviors>
                                    <core:EventTriggerBehavior  EventName="Tapped">
                                        <core:InvokeCommandAction Command="{Binding ItemClickCommand}" />
                                    </core:EventTriggerBehavior>
                                </interactivity:Interaction.Behaviors>-->
                            </FlipView>
                            <ListBox ItemsSource="{Binding LatestNews.TopStories}" x:Name="listBox"  Height="26" VerticalAlignment="Bottom" HorizontalAlignment="Center" 
                             SelectedItem="{Binding SelectedItem, ElementName=flipView, Mode=TwoWay}"
                             ItemContainerStyle="{StaticResource ItemContainerStyle}"
                             Style="{StaticResource ListBoxStyle}" Background="Transparent">
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center"/>
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                            </ListBox>
                        </Grid>
                    </ListView.Header>

                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid >
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Border Visibility="{Binding IsDateTitleDisplay}" Background="#008BED" Padding="0,5" HorizontalAlignment="Stretch" Margin="0,-30,0,0">
                                    <TextBlock Text="{Binding Date,Converter={StaticResource DateStyleConverter}}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                                <Border Visibility="{Binding IsStoryItemDisplay}" Padding="5,0,5,5">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition Height="8"/>
                                        </Grid.RowDefinitions>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition Width="64"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Text="{Binding Title}" HorizontalAlignment="Left" TextWrapping="Wrap" Padding="0,0,2,0" Height="64"></TextBlock>

                                            <RelativePanel Grid.Column="1" Width="64" Height="64" HorizontalAlignment="Right">
                                                <RelativePanel.Background>
                                                    <ImageBrush ImageSource="ms-appx:///Assets/Images/image_small_default.png" />
                                                </RelativePanel.Background>
                                                <!--<Image Source="{Binding Images[0]}"></Image>-->
                                                <!--<local:CacheableImage ImageUrl="{Binding Images[0]}"/>-->
                                                <!--<Image Source="ms-appx:///Assets/FunIcon/home_pic.png" Stretch="UniformToFill" HorizontalAlignment="Right" Margin="-64,0,0,0" VerticalAlignment="Bottom" Width="36" Height="15"></Image>-->
                                                <Image  DataContext="{Binding Images[0],Converter={StaticResource ImageCache}}" Source="{Binding Result}"  ></Image>
                                                <!--<Border RelativePanel.AlignRightWithPanel="True"
                                                RelativePanel.AlignBottomWithPanel="True" Background="#99000000"
                                                Visibility="{Binding Multipic,Converter={StaticResource MultipicVisibility}}">
                                                    <TextBlock Text="多图" FontSize="11" Foreground="White" Margin="4,1,4,3"></TextBlock>
                                                </Border>-->
                                                <Rectangle RelativePanel.AlignRightWithPanel="True"
                                                RelativePanel.AlignBottomWithPanel="True" 
                                                Visibility="{Binding Multipic,Converter={StaticResource MultipicVisibility}}"  Width="40" Height="17" >
                                                    <Rectangle.Fill>
                                                        <ImageBrush ImageSource="ms-appx:///Assets/FunIcon/home_pic.png" Stretch="UniformToFill"/>
                                                    </Rectangle.Fill>
                                                </Rectangle>
                                            </RelativePanel>
                                        </Grid>
                                        <Line X1="10" StrokeThickness="0.5" Margin="0 7 0 0" Stretch="UniformToFill" Stroke="LightGray" Grid.Row="1" ></Line>
                                    </Grid>
                                </Border>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <ItemsStackPanel CacheLength="0" />
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                </ListView>

                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior  EventName="RefreshInvoked">
                        <core:InvokeCommandAction Command="{Binding RefreshCommand}" />
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
            </pr:PullToRefreshBox>
        </Grid>
        <ProgressRing Grid.Row="1" Name="pr" Height="40" Width="40" IsActive="{Binding IsActive}"  />
    </Grid>
</Page>
