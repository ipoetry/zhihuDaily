<Page
    x:Class="zhihuDaily.ThemePage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:zhihuDaily"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:Converter="using:zhihuDaily.Converters" 
    xmlns:pr="using:PullToRefresh.UWP" >

    <Page.Resources>

        <Style TargetType="ListViewItem" >
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <ListViewItemPresenter 
                            CheckHintBrush="{ThemeResource ListViewItemCheckHintThemeBrush}" 
                            CheckBrush="{ThemeResource ListViewItemCheckThemeBrush}" 
                            ContentMargin="4" 
                            ContentTransitions="{TemplateBinding ContentTransitions}" 
                            CheckSelectingBrush="{ThemeResource ListViewItemCheckSelectingThemeBrush}"
                            DragForeground="{ThemeResource ListViewItemDragForegroundThemeBrush}"
                            DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}"
                            DragBackground="{ThemeResource ListViewItemDragBackgroundThemeBrush}" 
                            DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"
                            FocusBorderBrush="{ThemeResource ListViewItemFocusBorderThemeBrush}" 
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            Padding="{TemplateBinding Padding}" PointerOverBackgroundMargin="1"
                            PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}"
                            PointerOverBackground="{ThemeResource ListViewItemPointerOverBackgroundThemeBrush}"
                            ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" 
                            SelectedPointerOverBorderBrush="{ThemeResource ListViewItemSelectedPointerOverBorderThemeBrush}"
                            SelectionCheckMarkVisualEnabled="True"
                            SelectedForeground="{ThemeResource ListViewItemSelectedForegroundThemeBrush}"
                            SelectedPointerOverBackground="{ThemeResource ListViewItemSelectedPointerOverBackgroundThemeBrush}" 
                            SelectedBorderThickness="{ThemeResource ListViewItemCompactSelectedBorderThemeThickness}" 
                            SelectedBackground="Transparent"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Converter:VisibilityConverter x:Key="VisibilityConverter"/>
        <Converter:ImageWidthConverter  x:Key="ImageWidthConverter" />
        <Converter:LightModeConverter x:Key="LightModeConverter"/>
        <Converter:CacheImageValueConverter x:Key="ImageCache"/>
        <Converter:MultipicVisibility x:Key="MultipicVisibility"/>
    </Page.Resources>
    <Grid >
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition />
        </Grid.RowDefinitions>

        <local:PageHeader>
            <local:PageHeader.HeaderContent>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Foreground="White"  x:Name="title" Style="{ThemeResource PageTitleTextBlockStyle}" VerticalAlignment="Center" Margin="48,0,0,0" Text="{Binding Theme.Name}"/>
                    <Button Foreground="White"  Background="Transparent" Grid.Column="1" HorizontalAlignment="Right"  x:Name="contextButton" FontWeight="Bold"   Content="· · ·" Width="48" Height="48">
                        <Button.Flyout>
                            <MenuFlyout>
                                <MenuFlyoutItem Name="btn_LightModeSwitch" Text="{Binding Converter={StaticResource LightModeConverter}, Path=CurrentTheme}" Click="MenuFlyoutItem_Click" ></MenuFlyoutItem>
                                <MenuFlyoutItem Text="设置选项" Click="MenuFlyoutItem_Click_1"></MenuFlyoutItem>
                            </MenuFlyout>
                        </Button.Flyout>
                    </Button>
                </Grid>
            </local:PageHeader.HeaderContent>
        </local:PageHeader>
        <Grid Name="grid_Theme" Grid.Row="1" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" >
            <pr:PullToRefreshBox RefreshInvoked="PullToRefreshBox_RefreshInvoked"><!--NewsDS-->
                <ListView x:Name="themeList"  ItemsSource="{Binding Theme.Stories}"   local:ItemClickCommand.Command="{Binding ItemClickCommand}" IsItemClickEnabled="True">
                    <ListView.Header>
                        <StackPanel Height="200" Name="HeadeImagerPanel" Opacity="0.6" Margin="0 0 0 20" Background="#dcdcdc">
                            <Image x:Name="HeaderImage" DataContext="{Binding Theme.Background,Converter={StaticResource ImageCache}}" Source="{Binding Result}"  Stretch="UniformToFill" ImageOpened="HeaderImage_ImageOpened">
                                <Image.RenderTransform>
                                    <ScaleTransform x:Name="sfr1" />
                                </Image.RenderTransform>
                            </Image>
                        </StackPanel>
                    </ListView.Header>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid Padding="5,0,5,5">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition Height="8"/>
                                </Grid.RowDefinitions>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{Binding Title}" HorizontalAlignment="Left" TextWrapping="Wrap" Padding="0,0,4,0" Height="64"></TextBlock>
                                    <RelativePanel Grid.Column="1" Width="{Binding Images[0],Converter={StaticResource ImageWidthConverter}}" Height="64" HorizontalAlignment="Right" Visibility="{Binding Images[0],Converter={StaticResource VisibilityConverter}}">
                                        <!--<StackPanel.Background>
                                    <ImageBrush ImageSource="ms-appx:///Assets/Images/default.png" />
                                </StackPanel.Background>-->

                                        <!--<Image Source="{Binding Images[0]}"  ></Image>-->
                                        <Image  DataContext="{Binding Images[0],Converter={StaticResource ImageCache}}" Source="{Binding Result}"  ></Image>
                                        <Border RelativePanel.AlignRightWithPanel="True"
                                                RelativePanel.AlignBottomWithPanel="True" Background="#99000000"
                                                Visibility="{Binding Multipic,Converter={StaticResource MultipicVisibility}}">
                                            <TextBlock Text="多图" FontSize="11" Foreground="White" Margin="4,1,4,3"></TextBlock>
                                        </Border>
                                        <!--<local:CacheableImage ImageUrl="{Binding Images[0]}" />-->
                                    </RelativePanel>
                                </Grid>
                                <Line X1="10" StrokeThickness="0.5" Margin="0 7 0 0" Stretch="UniformToFill" Stroke="LightGray" Grid.Row="1" ></Line>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>

                <!--<interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior  EventName="RefreshInvoked">
                        <core:InvokeCommandAction Command="{Binding RefreshCommand}" />
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>-->
            </pr:PullToRefreshBox>
        </Grid>
    </Grid>
</Page>
